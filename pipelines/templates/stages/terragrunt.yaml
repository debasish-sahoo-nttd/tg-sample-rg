parameters:
- name: deployEnvironments
  type: object
  default: []
- name: userSteps
  type: stepList
  default: []
- name: subscription
  type: string
  default: false
- name: pool
  type: string
  default: 'container-pool'

stages:
  - ${{ each deployEnv in parameters.deployEnvironments }}:
      - stage: terragrunt_${{deployEnv.environment}}
        displayName: 'Terragrunt Provisioning - ${{deployEnv.environment}}'
        dependsOn: ${{deployEnv.dependsOn}}
        jobs:
          - job: ${{ deployEnv.environment }}_TerraformInitPlan
            displayName: 'Terraform Init and Plan'
            pool: ${{ parameters.pool }}
            workspace:
              clean: all
            steps:
              - task: Bash@3
                displayName: 'Verify Environment'
                inputs:
                  targetType: 'inline'
                  script: |
                    set -x
                    echo "Present Working directory: $(pwd)"
                    echo "Listing files"
                    ls
                    echo "Installing ASDF"
                    asdf install
                    type terragrunt || exit 1
                    echo "Checking for Terragrunt"
                    terragrunt -version
              - task: AzureCLI@2
                displayName: 'Terragrunt Init and Plan - ${{deployEnv.environment}}'
                inputs:
                  azureSubscription: ${{parameters.subscription}}
                  scriptType: 'bash'
                  scriptLocation: 'inlineScript'
                  addSpnToEnvironment: true
                  inlineScript: |
                    set -x
                    env
                    export ARM_CLIENT_ID=$servicePrincipalId
                    export ARM_CLIENT_SECRET=$servicePrincipalKey
                    export ARM_TENANT_ID=$tenantId
                    #export ARM_SUBSCRIPTION_ID="20000000-0000-0000-0000-000000000000"
                    echo "Present Working directory: $(pwd)"
                    echo "Terragrunt Path: ${{ deployEnv.terragruntPath }}"
                    cd "${{ deployEnv.terragruntPath }}"
                    echo -e "Listing files \n"
                    ls
                    echo "Running Terragrunt Init"
                    terragrunt init 
                    echo "Running Terragrunt Plan"
                    terragrunt plan
          - deployment: 'Deploy_${{deployEnv.environment}}'
            displayName: 'Terragrunt Apply - ${{deployEnv.environment}}'
            dependsOn:
            - ${{ deployEnv.environment }}_TerraformInitPlan
            pool: ${{ parameters.pool }}
            environment: ${{ deployEnv.azureEnvironment }}
            strategy:
              runOnce:
                deploy:
                  steps:
                    - task: AzureCLI@2
                      displayName: 'Terraform Apply'
                      inputs:
                        azureSubscription: ${{parameters.subscription}}
                        scriptType: 'bash'
                        scriptLocation: 'inlineScript'
                        addSpnToEnvironment: true
                        inlineScript: |
                          set -x
                          export ARM_CLIENT_ID=$servicePrincipalId
                          export ARM_CLIENT_SECRET=$servicePrincipalKey
                          export ARM_TENANT_ID=$tenantId
                          #export ARM_SUBSCRIPTION_ID="20000000-0000-0000-0000-000000000000"
                          echo "Present Working directory: $(pwd)"
                          echo "ASDF Install"
                          asdf install
                          cd ${{ deployEnv.terragruntPath }}
                          echo "Running Terragrunt Apply"
                          terragrunt apply -auto-approve